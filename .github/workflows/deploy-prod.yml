name: Push image and deploy to prod
run-name: Pushing Docker image to container registry and deploying to prod
on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'

jobs:
  call-build-and-push-image:
    uses: ./.github/workflows/build-and-push-image.yml
    with:
      latest: true
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_REGISTRY_NAME: ${{ secrets.DOCKER_REGISTRY_NAME }}

  deploy-image-prod:
    runs-on: ubuntu-latest
    needs: call-build-and-push-image
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Extract app_version from gradle.properties
        id: extract_version
        run: |
          echo "APP_VERSION=$(grep 'app_version=' gradle.properties | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop kbot_prod || true
            docker rm kbot_prod || true
            docker pull ${{ secrets.DOCKER_REGISTRY_NAME }}/kbot:${{ env.APP_VERSION }}
            docker run -d --restart=always --name kbot_prod \
              -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN_PROD }} \
              -e GUILD_ID=${{ secrets.GUILD_ID_PROD }} \
              -e ROLES_MESSAGE_CHANNEL_ID=${{ secrets.ROLES_MESSAGE_CHANNEL_ID_PROD }} \
              -e ROLES_MESSAGE_ID=${{ secrets.ROLES_MESSAGE_ID_PROD }} \
              -e DAILY_UPDATES_CHANNEL_ID=${{ secrets.DAILY_UPDATES_CHANNEL_ID_PROD }} \
              ${{ secrets.DOCKER_REGISTRY_NAME }}/kbot:${{ env.APP_VERSION }}